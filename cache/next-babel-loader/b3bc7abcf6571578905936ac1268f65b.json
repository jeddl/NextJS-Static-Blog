{"ast":null,"code":"var _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../components/Navbar\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\nimport matter from \"gray-matter\";\n\nconst Articles = ({\n  titles\n}) => __jsx(React.Fragment, null, __jsx(Navbar, {\n  title: \"Articles\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}), __jsx(TopLevelContainer, {\n  title: \"Articles\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 4\n  }\n}, \" Articles \"), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 4\n  }\n}, titles.map(title => {\n  return __jsx(\"li\", {\n    key: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/articles/[slug]\",\n    as: \"/articles/\" + title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, title)));\n}))));\n\nexport default Articles;\nexport const getStaticProps = async () => {\n  const dirPath = path.join(\"pages\", \"articles\", \"contents\");\n  const metadatas = fs.readdirSync(dirPath).map(filename => fs.readFileSync(path.join(dirPath, filename)).toString()).map(data => matter(data).data);\n  const titles = metadatas.map(metadata => metadata.title);\n  return {\n    props: {\n      titles: titles\n    }\n  };\n};","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx"],"names":["Navbar","fs","path","Link","TopLevelContainer","matter","Articles","titles","map","title","getStaticProps","dirPath","join","metadatas","readdirSync","filename","readFileSync","toString","data","metadata","props"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAChB,4BACC,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAEC,MAAC,iBAAD;AAAmB,EAAA,KAAK,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEA,MAAM,CAACC,GAAP,CAAWC,KAAK,IAAI;AACpB,SACC;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,kBAAX;AAA8B,IAAA,EAAE,EAAE,eAAeA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CADD,CADD,CADD;AAOA,CARA,CADF,CAFD,CAFD,CADD;;AAoBA,eAAeH,QAAf;AAEA,OAAO,MAAMI,cAA8B,GAAG,YAAY;AACzD,QAAMC,OAAO,GAAGT,IAAI,CAACU,IAAL,CAAU,OAAV,EAAmB,UAAnB,EAA+B,UAA/B,CAAhB;AACA,QAAMC,SAAS,GAAGZ,EAAE,CAClBa,WADgB,CACJH,OADI,EAEhBH,GAFgB,CAEZO,QAAQ,IAAId,EAAE,CAACe,YAAH,CAAgBd,IAAI,CAACU,IAAL,CAAUD,OAAV,EAAmBI,QAAnB,CAAhB,EAA8CE,QAA9C,EAFA,EAGhBT,GAHgB,CAGZU,IAAI,IAAIb,MAAM,CAACa,IAAD,CAAN,CAAaA,IAHT,CAAlB;AAIA,QAAMX,MAAM,GAAGM,SAAS,CAACL,GAAV,CAAcW,QAAQ,IAAIA,QAAQ,CAACV,KAAnC,CAAf;AACA,SAAO;AACNW,IAAAA,KAAK,EAAE;AACNb,MAAAA,MAAM,EAAEA;AADF;AADD,GAAP;AAKA,CAZM","sourcesContent":["import Navbar from \"../components/Navbar\";\nimport {GetStaticProps} from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\nimport matter from \"gray-matter\";\n\nconst Articles = ({titles}) => (\n\t<>\n\t\t<Navbar title=\"Articles\"></Navbar>\n\t\t<TopLevelContainer title=\"Articles\">\n\t\t\t<h1> Articles </h1>\n\t\t\t<div>\n\t\t\t\t{titles.map(title => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={title}>\n\t\t\t\t\t\t\t<Link href=\"/articles/[slug]\" as={\"/articles/\" + title}>\n\t\t\t\t\t\t\t\t<a>{title}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</TopLevelContainer>\n\t</>\n);\n\nexport default Articles;\n\nexport const getStaticProps: GetStaticProps = async () => {\n\tconst dirPath = path.join(\"pages\", \"articles\", \"contents\");\n\tconst metadatas = fs\n\t\t.readdirSync(dirPath)\n\t\t.map(filename => fs.readFileSync(path.join(dirPath, filename)).toString())\n\t\t.map(data => matter(data).data);\n\tconst titles = metadatas.map(metadata => metadata.title);\n\treturn {\n\t\tprops: {\n\t\t\ttitles: titles,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}