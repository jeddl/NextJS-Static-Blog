{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../components/Navbar\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\n\nvar Articles = function Articles(_ref) {\n  var titleWithFilenames = _ref.titleWithFilenames;\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    title: \"Articles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }), __jsx(TopLevelContainer, {\n    title: \"Articles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }, \" Articles \"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, titleWithFilenames.map(function (titleWithFilename) {\n    console.log(\"filename: \" + titleWithFilename[\"filename\"]);\n    console.log(\"title: \" + titleWithFilename[\"title\"]);\n    return __jsx(\"li\", {\n      key: titleWithFilename[\"filename\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: \"/articles/[slug]\",\n      as: \"/articles/\" + titleWithFilenames[\"filename\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 8\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, titleWithFilename[\"title\"])));\n  }))));\n};\n\nexport var __N_SSG = true;\nexport default Articles;","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx"],"names":["Navbar","Link","TopLevelContainer","Articles","titleWithFilenames","map","titleWithFilename","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAEC,kBAAF,QAAEA,kBAAF;AAAA,SAChB,4BACC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,kBAAkB,CAACC,GAAnB,CAAuB,UAAAC,iBAAiB,EAAI;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,iBAAiB,CAAC,UAAD,CAA5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,iBAAiB,CAAC,OAAD,CAAzC;AACA,WACC;AAAI,MAAA,GAAG,EAAEA,iBAAiB,CAAC,UAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AACC,MAAA,IAAI,EAAC,kBADN;AAEC,MAAA,EAAE,EAAE,eAAeF,kBAAkB,CAAC,UAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,iBAAiB,CAAC,OAAD,CAArB,CAJD,CADD,CADD;AAUA,GAbA,CADF,CAFD,CAFD,CADgB;AAAA,CAAjB;;;AAyBA,eAAeH,QAAf","sourcesContent":["import Navbar from \"../components/Navbar\";\nimport {GetStaticProps} from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\nimport matter from \"gray-matter\";\n\nconst Articles = ({titleWithFilenames}) => (\n\t<>\n\t\t<Navbar title=\"Articles\"></Navbar>\n\t\t<TopLevelContainer title=\"Articles\">\n\t\t\t<h1> Articles </h1>\n\t\t\t<div>\n\t\t\t\t{titleWithFilenames.map(titleWithFilename => {\n\t\t\t\t\tconsole.log(\"filename: \" + titleWithFilename[\"filename\"]);\n\t\t\t\t\tconsole.log(\"title: \" + titleWithFilename[\"title\"]);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={titleWithFilename[\"filename\"]}>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\thref=\"/articles/[slug]\"\n\t\t\t\t\t\t\t\tas={\"/articles/\" + titleWithFilenames[\"filename\"]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<a>{titleWithFilename[\"title\"]}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</TopLevelContainer>\n\t</>\n);\n\nexport default Articles;\n\nexport const getStaticProps: GetStaticProps = async () => {\n\tconst dirPath = path.join(\"pages\", \"articles\", \"contents\");\n\tconst files = fs.readdirSync(dirPath);\n\n\tconst metadatas = files\n\t\t.map(filename => fs.readFileSync(path.join(dirPath, filename)).toString())\n\t\t.map(data => matter(data).data);\n\tconst titles = metadatas.map(metadata => metadata.title);\n\tlet titleWithFilenames = [{}];\n\tfor (let i = 0; i < titles.length; i++) {\n\t\ttitleWithFilenames.push({\n\t\t\ttitle: titles[i],\n\t\t\tfilename: files[i],\n\t\t});\n\t}\n\treturn {\n\t\tprops: {\n\t\t\ttitleWithFilenames: titleWithFilenames,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}