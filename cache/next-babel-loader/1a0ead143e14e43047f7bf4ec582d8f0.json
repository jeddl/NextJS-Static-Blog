{"ast":null,"code":"var _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst Articles = () => __jsx(Layout, {\n  title: \"Articles\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, \" Articles \"));\n\nexport default Articles;\nexport const getStaticProps = async () => {\n  const files = fs.readdirSync(path.join(\"pages\", \"articles\", \"contents\"));\n  return {\n    props: {\n      posts: files.map(filename => filename.replace(\".md\", \"\"))\n    }\n  };\n};","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx"],"names":["Layout","fs","path","Articles","getStaticProps","files","readdirSync","join","props","posts","map","filename","replace"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAChB,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CADD;;AAMA,eAAeA,QAAf;AAEA,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACzD,QAAMC,KAAK,GAAGJ,EAAE,CAACK,WAAH,CAAeJ,IAAI,CAACK,IAAL,CAAU,OAAV,EAAmB,UAAnB,EAA+B,UAA/B,CAAf,CAAd;AACA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,GAAN,CAAUC,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAtB;AADD;AADD,GAAP;AAKA,CAPM","sourcesContent":["import Layout from \"../components/Layout\";\nimport {GetStaticProps} from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst Articles = () => (\n\t<Layout title=\"Articles\">\n\t\t<h1> Articles </h1>\n\t</Layout>\n);\n\nexport default Articles;\n\nexport const getStaticProps: GetStaticProps = async () => {\n\tconst files = fs.readdirSync(path.join(\"pages\", \"articles\", \"contents\"));\n\treturn {\n\t\tprops: {\n\t\t\tposts: files.map(filename => filename.replace(\".md\", \"\")),\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}