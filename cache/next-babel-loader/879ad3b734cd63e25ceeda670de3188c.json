{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/articles/[slug].tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport ReactMarkdown from \"react-markdown\"; // import CodeBlock from \"../../components/CodeBlock\";\n\nvar Post = function Post(_ref) {\n  var contents = _ref.contents,\n      metadata = _ref.metadata;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, metadata.title)), __jsx(ReactMarkdown, {\n    source: contents,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport var __N_SSG = true;\nexport default Post;","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/articles/[slug].tsx"],"names":["React","Head","ReactMarkdown","Post","contents","metadata","title"],"mappings":";;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AAEA,IAAMC,IAAsC,GAAG,SAAzCA,IAAyC,OAA0B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACxE,SACC,4BACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,QAAQ,CAACC,KAAjB,CADD,CADD,EAIC,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADD;AASA,CAVD;;;AAYA,eAAeD,IAAf","sourcesContent":["import fs from \"fs\";\nimport {GetStaticPaths, GetStaticProps} from \"next\";\nimport React from \"react\";\nimport Article from \"../../interfaces/article\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport Head from \"next/head\";\nimport ReactMarkdown from \"react-markdown\";\n// import CodeBlock from \"../../components/CodeBlock\";\n\nconst Post: React.FunctionComponent<Article> = ({contents, metadata}) => {\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{metadata.title}</title>\n\t\t\t</Head>\n\t\t\t<ReactMarkdown source={contents} />\n\t\t\t{/* <ReactMarkdown source={contents} renderers={{code: CodeBlock}} /> */}\n\t\t</>\n\t);\n};\n\nexport default Post;\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n\tconst files = fs.readdirSync(path.join(\"pages\", \"articles\", \"contents\"));\n\treturn {\n\t\tpaths: files.map(filename => ({\n\t\t\tparams: {\n\t\t\t\tslug: filename.replace(\".md\", \"\"),\n\t\t\t},\n\t\t})),\n\t\tfallback: false,\n\t};\n};\n\nexport const getStaticProps: GetStaticProps = async ctx => {\n\tif (!ctx.params) {\n\t\treturn {props: {}};\n\t}\n\tconst {slug} = ctx.params;\n\tconst filename = slug instanceof Array ? slug.join() : slug;\n\tconst markdownMetaData = fs\n\t\t.readFileSync(path.join(\"pages\", \"articles\", \"contents\", filename + \".md\"))\n\t\t.toString();\n\tconst parsed = matter(markdownMetaData);\n\treturn {\n\t\tprops: {\n\t\t\tcontents: parsed.content, //parsedHtml,\n\t\t\tmetadata: parsed.data,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}