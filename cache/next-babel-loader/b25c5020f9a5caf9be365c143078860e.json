{"ast":null,"code":"var _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../components/Navbar\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport Link from \"next/link\";\nimport TopLevelContainer, { MetadataContext } from \"../components/TopLevelContainer\";\n\nconst Articles = ({\n  filenames\n}) => __jsx(React.Fragment, null, __jsx(Navbar, {\n  title: \"Articles\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}), __jsx(TopLevelContainer, {\n  title: \"Articles\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }\n}, \" Articles \"), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 4\n  }\n}, filenames.map(filename => {\n  return __jsx(\"li\", {\n    key: \"filename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/articles/[slug]\",\n    as: \"/articles/\" + filename,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, filename)));\n})), __jsx(MetadataContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }\n}, articleMetadatas => {\n  console.log(articleMetadatas);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, articleMetadatas);\n})));\n\nexport default Articles;\nexport const getStaticProps = async () => {\n  const files = fs.readdirSync(path.join(\"pages\", \"articles\", \"contents\"));\n  return {\n    props: {\n      filenames: files.map(filename => filename.replace(\".md\", \"\"))\n    }\n  };\n};","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx"],"names":["Navbar","fs","path","Link","TopLevelContainer","MetadataContext","Articles","filenames","map","filename","articleMetadatas","console","log","getStaticProps","files","readdirSync","join","props","replace"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,iBAAP,IACCC,eADD,QAEO,iCAFP;;AAIA,MAAMC,QAAwC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAChD,4BACC,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAEC,MAAC,iBAAD;AAAmB,EAAA,KAAK,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEA,SAAS,CAACC,GAAV,CAAcC,QAAQ,IAAI;AAC1B,SACC;AAAI,IAAA,GAAG,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,kBAAX;AAA8B,IAAA,EAAE,EAAE,eAAeA,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,QAAJ,CADD,CADD,CADD;AAOA,CARA,CADF,CAFD,EAaC,MAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEC,gBAAgB,IAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,gBAAN,CAAP;AACA,CAJF,CAbD,CAFD,CADD;;AA0BA,eAAeJ,QAAf;AAEA,OAAO,MAAMO,cAA8B,GAAG,YAAY;AACzD,QAAMC,KAAK,GAAGb,EAAE,CAACc,WAAH,CAAeb,IAAI,CAACc,IAAL,CAAU,OAAV,EAAmB,UAAnB,EAA+B,UAA/B,CAAf,CAAd;AACA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNV,MAAAA,SAAS,EAAEO,KAAK,CAACN,GAAN,CAAUC,QAAQ,IAAIA,QAAQ,CAACS,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAtB;AADL;AADD,GAAP;AAKA,CAPM","sourcesContent":["import Navbar from \"../components/Navbar\";\nimport {GetStaticProps} from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport Files from \"../interfaces/files\";\nimport Link from \"next/link\";\nimport TopLevelContainer, {\n\tMetadataContext,\n} from \"../components/TopLevelContainer\";\n\nconst Articles: React.FunctionComponent<Files> = ({filenames}) => (\n\t<>\n\t\t<Navbar title=\"Articles\"></Navbar>\n\t\t<TopLevelContainer title=\"Articles\">\n\t\t\t<h1> Articles </h1>\n\t\t\t<div>\n\t\t\t\t{filenames.map(filename => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key=\"filename\">\n\t\t\t\t\t\t\t<Link href=\"/articles/[slug]\" as={\"/articles/\" + filename}>\n\t\t\t\t\t\t\t\t<a>{filename}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<MetadataContext.Consumer>\n\t\t\t\t{articleMetadatas => {\n\t\t\t\t\tconsole.log(articleMetadatas);\n\t\t\t\t\treturn <div>{articleMetadatas}</div>;\n\t\t\t\t}}\n\t\t\t</MetadataContext.Consumer>\n\t\t</TopLevelContainer>\n\t</>\n);\n\nexport default Articles;\n\nexport const getStaticProps: GetStaticProps = async () => {\n\tconst files = fs.readdirSync(path.join(\"pages\", \"articles\", \"contents\"));\n\treturn {\n\t\tprops: {\n\t\t\tfilenames: files.map(filename => filename.replace(\".md\", \"\")),\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}