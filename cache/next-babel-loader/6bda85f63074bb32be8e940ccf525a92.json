{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx\";\n\nvar __jsx = React.createElement;\nimport Navbar from \"../components/Navbar\";\n// import Files from \"../interfaces/files\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\nimport React from \"react\"; // import Metadata from '../interfaces/metadata'\n\nvar Articles = function Articles(_ref) {\n  var titles = _ref.titles;\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    title: \"Articles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }), __jsx(TopLevelContainer, {\n    title: \"Articles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, \" Articles \"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, titles.map(function (title) {\n    return __jsx(\"li\", {\n      key: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: \"/articles/[slug]\",\n      as: \"/articles/\" + title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, title)));\n  }))));\n};\n\nexport var __N_SSG = true;\nexport default Articles;","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/posts.tsx"],"names":["Navbar","Link","TopLevelContainer","React","Articles","titles","map","title"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAIA;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,QAAsC,GAAG,SAAzCA,QAAyC;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,SAC9C,4BACC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AACpB,WACC;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,kBAAX;AAA8B,MAAA,EAAE,EAAE,eAAeA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAJ,CADD,CADD,CADD;AAOA,GARA,CADF,CAFD,CAFD,CAD8C;AAAA,CAA/C;;;AAoBA,eAAeH,QAAf","sourcesContent":["import Navbar from \"../components/Navbar\";\nimport {GetStaticProps} from \"next\";\nimport fs from \"fs\";\nimport path from \"path\";\n// import Files from \"../interfaces/files\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\nimport matter from \"gray-matter\";\nimport React from \"react\";\n// import Metadata from '../interfaces/metadata'\n\nconst Articles: React.FunctionComponent<any> = ({titles}) => (\n\t<>\n\t\t<Navbar title=\"Articles\"></Navbar>\n\t\t<TopLevelContainer title=\"Articles\">\n\t\t\t<h1> Articles </h1>\n\t\t\t<div>\n\t\t\t\t{titles.map(title => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={title}>\n\t\t\t\t\t\t\t<Link href=\"/articles/[slug]\" as={\"/articles/\" + title}>\n\t\t\t\t\t\t\t\t<a>{title}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</TopLevelContainer>\n\t</>\n);\n\nexport default Articles;\n\nexport const getStaticProps: GetStaticProps = async () => {\n\t// const files = fs.readdirSync(path.join(\"pages\", \"articles\", \"contents\"));\n\t// return {\n\t// \tprops: {\n\t// \t\tfilenames: files.map(filename => filename.replace(\".md\", \"\")),\n\t// \t},\n\t// };\n\tconst dirPath = path.join(\"pages\", \"articles\", \"contents\");\n\tconst metadatas = fs\n\t\t.readdirSync(dirPath)\n\t\t.map(filename => fs.readFileSync(path.join(dirPath, filename)).toString())\n\t\t.map(data => matter(data).data);\n\tconst [articleMetadataList] = React.useState(metadatas);\n\tconst titles = articleMetadataList.map(metadata => metadata.title);\n\tconsole.log(titles);\n\treturn {\n\t\tprops: {\n\t\t\tmetadatas: metadatas,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}