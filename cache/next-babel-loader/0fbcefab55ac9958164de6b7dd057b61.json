{"ast":null,"code":"var _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport fs from \"fs\";\nimport path from \"path\"; // import matter from 'gray-matter'\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const dirPath = path.join(\"pages\", \"articles\", \"contents\");\n  const files = fs.readdirSync(dirPath);\n  const metadata = files.map(filename => {\n    fs.readFileSync(path.join(dirPath, filename)).toString();\n  });\n  console.log(metadata);\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/_app.tsx"],"names":["fs","path","MyApp","Component","pageProps","dirPath","join","files","readdirSync","metadata","map","filename","readFileSync","toString","console","log"],"mappings":";;;;;;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAsC;AACnD,QAAMC,OAAO,GAAGJ,IAAI,CAACK,IAAL,CAAU,OAAV,EAAmB,UAAnB,EAA+B,UAA/B,CAAhB;AACA,QAAMC,KAAK,GAAGP,EAAE,CAACQ,WAAH,CAAeH,OAAf,CAAd;AACA,QAAMI,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUC,QAAQ,IAAI;AACtCX,IAAAA,EAAE,CAACY,YAAH,CAAgBX,IAAI,CAACK,IAAL,CAAUD,OAAV,EAAmBM,QAAnB,CAAhB,EAA8CE,QAA9C;AACA,GAFgB,CAAjB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAO,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA,CARD;;AAUA,eAAeF,KAAf","sourcesContent":["import {AppProps} from \"next/app\";\nimport fs from \"fs\";\nimport path from \"path\";\n// import matter from 'gray-matter'\n\nconst MyApp = ({Component, pageProps}: AppProps) => {\n\tconst dirPath = path.join(\"pages\", \"articles\", \"contents\");\n\tconst files = fs.readdirSync(dirPath);\n\tconst metadata = files.map(filename => {\n\t\tfs.readFileSync(path.join(dirPath, filename)).toString();\n\t});\n\tconsole.log(metadata);\n\treturn <Component {...pageProps} />;\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}