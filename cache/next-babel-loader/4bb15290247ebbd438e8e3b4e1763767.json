{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../components/Navbar\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport Link from \"next/link\";\nimport TopLevelContainer from \"../components/TopLevelContainer\";\nimport matter from \"gray-matter\";\n\nconst Articles = ({\n  titleWithFilenames\n}) => __jsx(React.Fragment, null, __jsx(Navbar, {\n  title: \"Articles\"\n}), __jsx(TopLevelContainer, {\n  title: \"Articles\"\n}, __jsx(\"h1\", null, \" Articles \"), __jsx(\"div\", null, titleWithFilenames.map(titleWithFilename => {\n  return __jsx(\"li\", {\n    key: titleWithFilename[\"filename\"]\n  }, __jsx(Link, {\n    href: \"/articles/[slug]\",\n    as: \"/articles/\" + titleWithFilename[\"filename\"]\n  }, __jsx(\"a\", null, titleWithFilename[\"title\"])));\n}))));\n\nexport default Articles;\nexport const getStaticProps = async () => {\n  const dirPath = path.join(\"pages\", \"articles\", \"contents\");\n  const files = fs.readdirSync(dirPath);\n  const metadatas = files.map(filename => fs.readFileSync(path.join(dirPath, filename)).toString()).map(data => matter(data).data);\n  const titles = metadatas.map(metadata => metadata.title);\n  let titleWithFilenames = [];\n\n  for (let i = 0; i < titles.length; i++) {\n    titleWithFilenames.push({\n      title: titles[i],\n      filename: files[i].replace(\".md\", \"\")\n    });\n  }\n\n  return {\n    props: {\n      titleWithFilenames: titleWithFilenames\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}