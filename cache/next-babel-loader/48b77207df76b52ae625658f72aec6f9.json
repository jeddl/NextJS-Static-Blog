{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/_app.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fs from \"fs\";\nimport path from \"path\"; // import matter from 'gray-matter'\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var dirPath = path.join(\"pages\", \"articles\", \"contents\");\n  var files = fs.readdirSync(dirPath);\n  var metadata = files.map(function (filename) {\n    fs.readFileSync(path.join(dirPath, filename)).toString();\n  });\n  console.log(metadata);\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/_app.tsx"],"names":["fs","path","MyApp","Component","pageProps","dirPath","join","files","readdirSync","metadata","map","filename","readFileSync","toString","console","log"],"mappings":";;;;;;;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsC;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AACnD,MAAMC,OAAO,GAAGJ,IAAI,CAACK,IAAL,CAAU,OAAV,EAAmB,UAAnB,EAA+B,UAA/B,CAAhB;AACA,MAAMC,KAAK,GAAGP,EAAE,CAACQ,WAAH,CAAeH,OAAf,CAAd;AACA,MAAMI,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAU,UAAAC,QAAQ,EAAI;AACtCX,IAAAA,EAAE,CAACY,YAAH,CAAgBX,IAAI,CAACK,IAAL,CAAUD,OAAV,EAAmBM,QAAnB,CAAhB,EAA8CE,QAA9C;AACA,GAFgB,CAAjB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAO,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA,CARD;;AAUA,eAAeF,KAAf","sourcesContent":["import {AppProps} from \"next/app\";\nimport fs from \"fs\";\nimport path from \"path\";\n// import matter from 'gray-matter'\n\nconst MyApp = ({Component, pageProps}: AppProps) => {\n\tconst dirPath = path.join(\"pages\", \"articles\", \"contents\");\n\tconst files = fs.readdirSync(dirPath);\n\tconst metadata = files.map(filename => {\n\t\tfs.readFileSync(path.join(dirPath, filename)).toString();\n\t});\n\tconsole.log(metadata);\n\treturn <Component {...pageProps} />;\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}