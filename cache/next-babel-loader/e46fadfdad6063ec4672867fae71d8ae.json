{"ast":null,"code":"var _jsxFileName = \"/Users/junyueli/codebase/metajedd/metajedd/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import Metadata from \"../interfaces/metadata\";\n// import {GetStaticProps} from \"next\";\nimport matter from \"gray-matter\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MyApp;\n\nconst getMetadata = () => {\n  const dirPath = path.join(\"pages\", \"articles\", \"contents\");\n  const metadatas = fs.readdirSync(dirPath).map(filename => fs.readFileSync(path.join(dirPath, filename)).toString()).map(data => matter(data).data);\n  return {\n    props: {\n      metadatas: metadatas\n    }\n  };\n};","map":{"version":3,"sources":["/Users/junyueli/codebase/metajedd/metajedd/pages/_app.tsx"],"names":["matter","path","fs","MyApp","Component","pageProps","getMetadata","dirPath","join","metadatas","readdirSync","map","filename","readFileSync","toString","data","props"],"mappings":";;;;;;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAsC;AACnD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA,CAFD;;AAIA,eAAeF,KAAf;;AAEA,MAAMG,WAAW,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAGN,IAAI,CAACO,IAAL,CAAU,OAAV,EAAmB,UAAnB,EAA+B,UAA/B,CAAhB;AACA,QAAMC,SAAS,GAAGP,EAAE,CAClBQ,WADgB,CACJH,OADI,EAEhBI,GAFgB,CAEZC,QAAQ,IAAIV,EAAE,CAACW,YAAH,CAAgBZ,IAAI,CAACO,IAAL,CAAUD,OAAV,EAAmBK,QAAnB,CAAhB,EAA8CE,QAA9C,EAFA,EAGhBH,GAHgB,CAGZI,IAAI,IAAIf,MAAM,CAACe,IAAD,CAAN,CAAaA,IAHT,CAAlB;AAIA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNP,MAAAA,SAAS,EAAEA;AADL;AADD,GAAP;AAKA,CAXD","sourcesContent":["import {AppProps} from \"next/app\";\n// import Metadata from \"../interfaces/metadata\";\n// import {GetStaticProps} from \"next\";\nimport matter from \"gray-matter\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nconst MyApp = ({Component, pageProps}: AppProps) => {\n\treturn <Component {...pageProps} />;\n};\n\nexport default MyApp;\n\nconst getMetadata = () => {\n\tconst dirPath = path.join(\"pages\", \"articles\", \"contents\");\n\tconst metadatas = fs\n\t\t.readdirSync(dirPath)\n\t\t.map(filename => fs.readFileSync(path.join(dirPath, filename)).toString())\n\t\t.map(data => matter(data).data);\n\treturn {\n\t\tprops: {\n\t\t\tmetadatas: metadatas,\n\t\t},\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}